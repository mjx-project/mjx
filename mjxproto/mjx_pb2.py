# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: mjx.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tmjx.proto\x12\x08mjxproto\"C\n\x05Score\x12\r\n\x05round\x18\x01 \x01(\r\x12\r\n\x05honba\x18\x02 \x01(\r\x12\x0e\n\x06riichi\x18\x03 \x01(\r\x12\x0c\n\x04tens\x18\x04 \x03(\x05\"S\n\x05\x45vent\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.mjxproto.EventType\x12\x0b\n\x03who\x18\x02 \x01(\x05\x12\x0c\n\x04tile\x18\x03 \x01(\r\x12\x0c\n\x04open\x18\x04 \x01(\r\"\x97\x01\n\x11PublicObservation\x12\x0f\n\x07game_id\x18\x01 \x01(\t\x12\x12\n\nplayer_ids\x18\x02 \x03(\t\x12#\n\ninit_score\x18\x03 \x01(\x0b\x32\x0f.mjxproto.Score\x12\x17\n\x0f\x64ora_indicators\x18\x04 \x03(\r\x12\x1f\n\x06\x65vents\x18\x05 \x03(\x0b\x32\x0f.mjxproto.Event\"+\n\x04Hand\x12\x14\n\x0c\x63losed_tiles\x18\x01 \x03(\r\x12\r\n\x05opens\x18\x02 \x03(\r\"}\n\x12PrivateObservation\x12\x0b\n\x03who\x18\x01 \x01(\x05\x12!\n\tinit_hand\x18\x02 \x01(\x0b\x32\x0e.mjxproto.Hand\x12\x14\n\x0c\x64raw_history\x18\x03 \x03(\r\x12!\n\tcurr_hand\x18\x04 \x01(\x0b\x32\x0e.mjxproto.Hand\"\xe8\x01\n\x0bObservation\x12\x0b\n\x03who\x18\x01 \x01(\x05\x12\x37\n\x12public_observation\x18\x02 \x01(\x0b\x32\x1b.mjxproto.PublicObservation\x12\x39\n\x13private_observation\x18\x03 \x01(\x0b\x32\x1c.mjxproto.PrivateObservation\x12/\n\x0eround_terminal\x18\x04 \x01(\x0b\x32\x17.mjxproto.RoundTerminal\x12\'\n\rlegal_actions\x18\x05 \x03(\x0b\x32\x10.mjxproto.Action\"\xce\x01\n\x03Win\x12\x0b\n\x03who\x18\x01 \x01(\x05\x12\x10\n\x08\x66rom_who\x18\x02 \x01(\x05\x12\x1c\n\x04hand\x18\x03 \x01(\x0b\x32\x0e.mjxproto.Hand\x12\x10\n\x08win_tile\x18\x04 \x01(\r\x12\n\n\x02\x66u\x18\x05 \x01(\r\x12\x0b\n\x03ten\x18\x06 \x01(\r\x12\x13\n\x0bten_changes\x18\x07 \x03(\x05\x12\r\n\x05yakus\x18\x08 \x03(\r\x12\x0c\n\x04\x66\x61ns\x18\t \x03(\r\x12\x10\n\x08yakumans\x18\n \x03(\r\x12\x1b\n\x13ura_dora_indicators\x18\x0b \x03(\r\"F\n\x08NoWinner\x12%\n\x07tenpais\x18\x01 \x03(\x0b\x32\x14.mjxproto.TenpaiHand\x12\x13\n\x0bten_changes\x18\x02 \x03(\x05\"7\n\nTenpaiHand\x12\x0b\n\x03who\x18\x01 \x01(\x05\x12\x1c\n\x04hand\x18\x02 \x01(\x0b\x32\x0e.mjxproto.Hand\"\x8f\x01\n\rRoundTerminal\x12$\n\x0b\x66inal_score\x18\x01 \x01(\x0b\x32\x0f.mjxproto.Score\x12\x1b\n\x04wins\x18\x02 \x03(\x0b\x32\r.mjxproto.Win\x12%\n\tno_winner\x18\x03 \x01(\x0b\x32\x12.mjxproto.NoWinner\x12\x14\n\x0cis_game_over\x18\x04 \x01(\x08\"\xda\x01\n\x05State\x12+\n\x0chidden_state\x18\x01 \x01(\x0b\x32\x15.mjxproto.HiddenState\x12\x37\n\x12public_observation\x18\x02 \x01(\x0b\x32\x1b.mjxproto.PublicObservation\x12:\n\x14private_observations\x18\x03 \x03(\x0b\x32\x1c.mjxproto.PrivateObservation\x12/\n\x0eround_terminal\x18\x04 \x01(\x0b\x32\x17.mjxproto.RoundTerminal\"K\n\x0bHiddenState\x12\x11\n\tgame_seed\x18\x01 \x01(\x04\x12\x0c\n\x04wall\x18\x02 \x03(\r\x12\x1b\n\x13ura_dora_indicators\x18\x03 \x03(\r\"U\n\x06\x41\x63tion\x12\"\n\x04type\x18\x01 \x01(\x0e\x32\x14.mjxproto.ActionType\x12\x0b\n\x03who\x18\x02 \x01(\x05\x12\x0c\n\x04tile\x18\x03 \x01(\r\x12\x0c\n\x04open\x18\x04 \x01(\r\"\xf5\x01\n\nGameResult\x12\x11\n\tgame_seed\x18\x01 \x01(\x04\x12\x12\n\nplayer_ids\x18\x02 \x03(\t\x12,\n\x04tens\x18\x03 \x03(\x0b\x32\x1e.mjxproto.GameResult.TensEntry\x12\x34\n\x08rankings\x18\x04 \x03(\x0b\x32\".mjxproto.GameResult.RankingsEntry\x1a+\n\tTensEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a/\n\rRankingsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01*\xd8\x02\n\nActionType\x12\x17\n\x13\x41\x43TION_TYPE_DISCARD\x10\x00\x12\x19\n\x15\x41\x43TION_TYPE_TSUMOGIRI\x10\x01\x12\x16\n\x12\x41\x43TION_TYPE_RIICHI\x10\x02\x12\x1a\n\x16\x41\x43TION_TYPE_CLOSED_KAN\x10\x03\x12\x19\n\x15\x41\x43TION_TYPE_ADDED_KAN\x10\x04\x12\x15\n\x11\x41\x43TION_TYPE_TSUMO\x10\x05\x12,\n(ACTION_TYPE_ABORTIVE_DRAW_NINE_TERMINALS\x10\x06\x12\x13\n\x0f\x41\x43TION_TYPE_CHI\x10\x07\x12\x13\n\x0f\x41\x43TION_TYPE_PON\x10\x08\x12\x18\n\x14\x41\x43TION_TYPE_OPEN_KAN\x10\t\x12\x13\n\x0f\x41\x43TION_TYPE_RON\x10\n\x12\x12\n\x0e\x41\x43TION_TYPE_NO\x10\x0b\x12\x15\n\x11\x41\x43TION_TYPE_DUMMY\x10\x63*\xee\x04\n\tEventType\x12\x16\n\x12\x45VENT_TYPE_DISCARD\x10\x00\x12\x18\n\x14\x45VENT_TYPE_TSUMOGIRI\x10\x01\x12\x15\n\x11\x45VENT_TYPE_RIICHI\x10\x02\x12\x19\n\x15\x45VENT_TYPE_CLOSED_KAN\x10\x03\x12\x18\n\x14\x45VENT_TYPE_ADDED_KAN\x10\x04\x12\x14\n\x10\x45VENT_TYPE_TSUMO\x10\x05\x12+\n\'EVENT_TYPE_ABORTIVE_DRAW_NINE_TERMINALS\x10\x06\x12\x12\n\x0e\x45VENT_TYPE_CHI\x10\x07\x12\x12\n\x0e\x45VENT_TYPE_PON\x10\x08\x12\x17\n\x13\x45VENT_TYPE_OPEN_KAN\x10\t\x12\x12\n\x0e\x45VENT_TYPE_RON\x10\n\x12\x13\n\x0f\x45VENT_TYPE_DRAW\x10\x0c\x12\"\n\x1e\x45VENT_TYPE_RIICHI_SCORE_CHANGE\x10\r\x12\x17\n\x13\x45VENT_TYPE_NEW_DORA\x10\x0e\x12)\n%EVENT_TYPE_ABORTIVE_DRAW_FOUR_RIICHIS\x10\x0f\x12\'\n#EVENT_TYPE_ABORTIVE_DRAW_THREE_RONS\x10\x10\x12&\n\"EVENT_TYPE_ABORTIVE_DRAW_FOUR_KANS\x10\x11\x12\'\n#EVENT_TYPE_ABORTIVE_DRAW_FOUR_WINDS\x10\x12\x12%\n!EVENT_TYPE_EXHAUSTIVE_DRAW_NORMAL\x10\x13\x12-\n)EVENT_TYPE_EXHAUSTIVE_DRAW_NAGASHI_MANGAN\x10\x14\x32@\n\x05\x41gent\x12\x37\n\nTakeAction\x12\x15.mjxproto.Observation\x1a\x10.mjxproto.Action\"\x00\x62\x06proto3')

_ACTIONTYPE = DESCRIPTOR.enum_types_by_name['ActionType']
ActionType = enum_type_wrapper.EnumTypeWrapper(_ACTIONTYPE)
_EVENTTYPE = DESCRIPTOR.enum_types_by_name['EventType']
EventType = enum_type_wrapper.EnumTypeWrapper(_EVENTTYPE)
ACTION_TYPE_DISCARD = 0
ACTION_TYPE_TSUMOGIRI = 1
ACTION_TYPE_RIICHI = 2
ACTION_TYPE_CLOSED_KAN = 3
ACTION_TYPE_ADDED_KAN = 4
ACTION_TYPE_TSUMO = 5
ACTION_TYPE_ABORTIVE_DRAW_NINE_TERMINALS = 6
ACTION_TYPE_CHI = 7
ACTION_TYPE_PON = 8
ACTION_TYPE_OPEN_KAN = 9
ACTION_TYPE_RON = 10
ACTION_TYPE_NO = 11
ACTION_TYPE_DUMMY = 99
EVENT_TYPE_DISCARD = 0
EVENT_TYPE_TSUMOGIRI = 1
EVENT_TYPE_RIICHI = 2
EVENT_TYPE_CLOSED_KAN = 3
EVENT_TYPE_ADDED_KAN = 4
EVENT_TYPE_TSUMO = 5
EVENT_TYPE_ABORTIVE_DRAW_NINE_TERMINALS = 6
EVENT_TYPE_CHI = 7
EVENT_TYPE_PON = 8
EVENT_TYPE_OPEN_KAN = 9
EVENT_TYPE_RON = 10
EVENT_TYPE_DRAW = 12
EVENT_TYPE_RIICHI_SCORE_CHANGE = 13
EVENT_TYPE_NEW_DORA = 14
EVENT_TYPE_ABORTIVE_DRAW_FOUR_RIICHIS = 15
EVENT_TYPE_ABORTIVE_DRAW_THREE_RONS = 16
EVENT_TYPE_ABORTIVE_DRAW_FOUR_KANS = 17
EVENT_TYPE_ABORTIVE_DRAW_FOUR_WINDS = 18
EVENT_TYPE_EXHAUSTIVE_DRAW_NORMAL = 19
EVENT_TYPE_EXHAUSTIVE_DRAW_NAGASHI_MANGAN = 20


_SCORE = DESCRIPTOR.message_types_by_name['Score']
_EVENT = DESCRIPTOR.message_types_by_name['Event']
_PUBLICOBSERVATION = DESCRIPTOR.message_types_by_name['PublicObservation']
_HAND = DESCRIPTOR.message_types_by_name['Hand']
_PRIVATEOBSERVATION = DESCRIPTOR.message_types_by_name['PrivateObservation']
_OBSERVATION = DESCRIPTOR.message_types_by_name['Observation']
_WIN = DESCRIPTOR.message_types_by_name['Win']
_NOWINNER = DESCRIPTOR.message_types_by_name['NoWinner']
_TENPAIHAND = DESCRIPTOR.message_types_by_name['TenpaiHand']
_ROUNDTERMINAL = DESCRIPTOR.message_types_by_name['RoundTerminal']
_STATE = DESCRIPTOR.message_types_by_name['State']
_HIDDENSTATE = DESCRIPTOR.message_types_by_name['HiddenState']
_ACTION = DESCRIPTOR.message_types_by_name['Action']
_GAMERESULT = DESCRIPTOR.message_types_by_name['GameResult']
_GAMERESULT_TENSENTRY = _GAMERESULT.nested_types_by_name['TensEntry']
_GAMERESULT_RANKINGSENTRY = _GAMERESULT.nested_types_by_name['RankingsEntry']
Score = _reflection.GeneratedProtocolMessageType('Score', (_message.Message,), {
  'DESCRIPTOR' : _SCORE,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.Score)
  })
_sym_db.RegisterMessage(Score)

Event = _reflection.GeneratedProtocolMessageType('Event', (_message.Message,), {
  'DESCRIPTOR' : _EVENT,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.Event)
  })
_sym_db.RegisterMessage(Event)

PublicObservation = _reflection.GeneratedProtocolMessageType('PublicObservation', (_message.Message,), {
  'DESCRIPTOR' : _PUBLICOBSERVATION,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.PublicObservation)
  })
_sym_db.RegisterMessage(PublicObservation)

Hand = _reflection.GeneratedProtocolMessageType('Hand', (_message.Message,), {
  'DESCRIPTOR' : _HAND,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.Hand)
  })
_sym_db.RegisterMessage(Hand)

PrivateObservation = _reflection.GeneratedProtocolMessageType('PrivateObservation', (_message.Message,), {
  'DESCRIPTOR' : _PRIVATEOBSERVATION,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.PrivateObservation)
  })
_sym_db.RegisterMessage(PrivateObservation)

Observation = _reflection.GeneratedProtocolMessageType('Observation', (_message.Message,), {
  'DESCRIPTOR' : _OBSERVATION,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.Observation)
  })
_sym_db.RegisterMessage(Observation)

Win = _reflection.GeneratedProtocolMessageType('Win', (_message.Message,), {
  'DESCRIPTOR' : _WIN,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.Win)
  })
_sym_db.RegisterMessage(Win)

NoWinner = _reflection.GeneratedProtocolMessageType('NoWinner', (_message.Message,), {
  'DESCRIPTOR' : _NOWINNER,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.NoWinner)
  })
_sym_db.RegisterMessage(NoWinner)

TenpaiHand = _reflection.GeneratedProtocolMessageType('TenpaiHand', (_message.Message,), {
  'DESCRIPTOR' : _TENPAIHAND,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.TenpaiHand)
  })
_sym_db.RegisterMessage(TenpaiHand)

RoundTerminal = _reflection.GeneratedProtocolMessageType('RoundTerminal', (_message.Message,), {
  'DESCRIPTOR' : _ROUNDTERMINAL,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.RoundTerminal)
  })
_sym_db.RegisterMessage(RoundTerminal)

State = _reflection.GeneratedProtocolMessageType('State', (_message.Message,), {
  'DESCRIPTOR' : _STATE,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.State)
  })
_sym_db.RegisterMessage(State)

HiddenState = _reflection.GeneratedProtocolMessageType('HiddenState', (_message.Message,), {
  'DESCRIPTOR' : _HIDDENSTATE,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.HiddenState)
  })
_sym_db.RegisterMessage(HiddenState)

Action = _reflection.GeneratedProtocolMessageType('Action', (_message.Message,), {
  'DESCRIPTOR' : _ACTION,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.Action)
  })
_sym_db.RegisterMessage(Action)

GameResult = _reflection.GeneratedProtocolMessageType('GameResult', (_message.Message,), {

  'TensEntry' : _reflection.GeneratedProtocolMessageType('TensEntry', (_message.Message,), {
    'DESCRIPTOR' : _GAMERESULT_TENSENTRY,
    '__module__' : 'mjx_pb2'
    # @@protoc_insertion_point(class_scope:mjxproto.GameResult.TensEntry)
    })
  ,

  'RankingsEntry' : _reflection.GeneratedProtocolMessageType('RankingsEntry', (_message.Message,), {
    'DESCRIPTOR' : _GAMERESULT_RANKINGSENTRY,
    '__module__' : 'mjx_pb2'
    # @@protoc_insertion_point(class_scope:mjxproto.GameResult.RankingsEntry)
    })
  ,
  'DESCRIPTOR' : _GAMERESULT,
  '__module__' : 'mjx_pb2'
  # @@protoc_insertion_point(class_scope:mjxproto.GameResult)
  })
_sym_db.RegisterMessage(GameResult)
_sym_db.RegisterMessage(GameResult.TensEntry)
_sym_db.RegisterMessage(GameResult.RankingsEntry)

_AGENT = DESCRIPTOR.services_by_name['Agent']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _GAMERESULT_TENSENTRY._options = None
  _GAMERESULT_TENSENTRY._serialized_options = b'8\001'
  _GAMERESULT_RANKINGSENTRY._options = None
  _GAMERESULT_RANKINGSENTRY._serialized_options = b'8\001'
  _ACTIONTYPE._serialized_start=1856
  _ACTIONTYPE._serialized_end=2200
  _EVENTTYPE._serialized_start=2203
  _EVENTTYPE._serialized_end=2825
  _SCORE._serialized_start=23
  _SCORE._serialized_end=90
  _EVENT._serialized_start=92
  _EVENT._serialized_end=175
  _PUBLICOBSERVATION._serialized_start=178
  _PUBLICOBSERVATION._serialized_end=329
  _HAND._serialized_start=331
  _HAND._serialized_end=374
  _PRIVATEOBSERVATION._serialized_start=376
  _PRIVATEOBSERVATION._serialized_end=501
  _OBSERVATION._serialized_start=504
  _OBSERVATION._serialized_end=736
  _WIN._serialized_start=739
  _WIN._serialized_end=945
  _NOWINNER._serialized_start=947
  _NOWINNER._serialized_end=1017
  _TENPAIHAND._serialized_start=1019
  _TENPAIHAND._serialized_end=1074
  _ROUNDTERMINAL._serialized_start=1077
  _ROUNDTERMINAL._serialized_end=1220
  _STATE._serialized_start=1223
  _STATE._serialized_end=1441
  _HIDDENSTATE._serialized_start=1443
  _HIDDENSTATE._serialized_end=1518
  _ACTION._serialized_start=1520
  _ACTION._serialized_end=1605
  _GAMERESULT._serialized_start=1608
  _GAMERESULT._serialized_end=1853
  _GAMERESULT_TENSENTRY._serialized_start=1761
  _GAMERESULT_TENSENTRY._serialized_end=1804
  _GAMERESULT_RANKINGSENTRY._serialized_start=1806
  _GAMERESULT_RANKINGSENTRY._serialized_end=1853
  _AGENT._serialized_start=2827
  _AGENT._serialized_end=2891
# @@protoc_insertion_point(module_scope)
