name: Wheels

on:
  push: [ push  ]
  release:
    types:
      - published

env:
  CIBW_TEST_COMMAND: python3 test.py
  CIBW_TEST_EXTRAS: test


jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v2
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: pypa/cibuildwheel@v1.12.0
      env:
        # Python 2.7 on Windows requires a workaround for C++11 support,
        # built separately below
        CIBW_BUILD: cp39-*
        CIBW_SKIP: pp* cp27-win* cp35-* cp36-* cp37-* cp38-* *macos* *win*
        CIBW_ARCHS_MACOS: auto universal2
        CIBW_TEST_SKIP: "*universal2:arm64"
        CIBW_TEST_EXTRAS: test
        CIBW_TEST_COMMAND: python3 test.py

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_win27_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v2

    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
