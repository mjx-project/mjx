@startuml

set namespaceSeparator ::

class mjproto::Score {
  + round
  + honba 
  + riichi 
  + ten 
}

class mjproto::TakenAction {
  + who
  + type 
  + draw 
  + discard 
  + discard_drawn_tile
  + open
}

class mjproto::ActionHistory {
  + taken_actions 
}

class mjproto::InitialHand {
  + tiles
}

class mjproto::PossibleAction {
  + type
  + open 
  + discard_candidates
}

class mjproto::ActionRequest {
  + game_id
  + score
  + action_history
  + who
  + initial_hand 
  + possible_actions
}

class mjproto::ActionResponse { 
  + game_id 
  + who
  + type
  + yes
  + discard
  + open
}

mjproto::ActionRequest *-- mjproto::Score
mjproto::ActionRequest *-- mjproto::ActionHistory
mjproto::ActionRequest *-- mjproto::InitialHand
mjproto::ActionRequest "1" *-- "1..*" mjproto::PossibleAction

mjproto::ActionHistory "1" *-- "1..*" mjproto::TakenAction


class mj::Environment {
}

class mj::YakuEvaluator {
}

class mj::WinningHandCache {
}

class mj::WinningScore {
}

class mj::WinningInfo {
}

class mj::State {

}

class mj::Player {
    + hand : Hand
    + river : River
    - initial_hand : mjproto:: InitialHand
}

class mj::Observation {
    - action_request mjproto::ActionRequest
}
note left
mjproto::InitialHand refers to mj::Player
mjproto::ActionHistory refers to mj::ActionHistory
end note

class mj::ActionHistory {
    - action_history mjproto::ActionHistory
}

class mj::AgentClient {

}

class mj::AgentServer {

}

class mj::Score {
    - score mjproto::Score
}

class mj::Wall {

}

class mj::River {

} 

class mj::Action {
    - action_response mjproto::ActionResponse
}

class mj::Hand {
    + stage
    + last_tile_added
    + closed_tiles
    + opens
    + undiscardable_tiles
    + under_riichi
    + PossibleDiscards()
    + PossibleDiscardsAfterRiichi()
    + PossibleOpensAfterOthersDiscard()
    + PossibleOpensAfterDraw()
    + CanRon()
    + IsCompleted()
    + CanRiichi()
    + Draw()
    + Riichi()
    + ApplyOpen()
    + Ron()
    + RonAfterOthersKan()
    + Tsumo()
    + Discard()
}

class mj::Open {

}

class mj::Tile {
    + id
    + type
}


mj::Environment "1" *-- "4" mj::AgentClient
mj::Environment -- mj::State 

mj::State <-- mj::Action : UpdateStateByAction
mj::State *-- mj::Score 
mj::State *-- mj::Wall
mj::State *-- mj::ActionHistory
mj::State "1" *-- "4" mj::Player
mj::State --> mj::Observation : NewObservation

mj::Observation --> mj::AgentClient : TakeAction

mj::Player *-- mj::Hand
mj::Player *-- mj::River 

mj::Hand "1" *-- "1..4" mj::Open
mj::Hand --> mj::WinningInfo

mj::WinningInfo --> mj::YakuEvaluator

mj::YakuEvaluator -- mj::WinningHandCache
mj::YakuEvaluator --> mj::WinningScore

mj::WinningScore --> mj::Hand

mj::AgentClient --> mj::AgentServer : <<mjproto::ActionRequest>>
mj::AgentClient --> mj::Action : TakeAction

mj::AgentServer --> mj::AgentClient : <<mjproto::ActionResponse>>


@enduml